<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="xs3p.xsl"?>
<xs:schema xmlns:dat="Dataprov"
           targetNamespace="Dataprov"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified">
  <xs:include schemaLocation="dataObjectList.xsd"/>
  <xs:include schemaLocation="executor.xsd"/>
  <xs:include schemaLocation="host.xsd"/>
  <xs:include schemaLocation="commandLine.xsd"/>
  <xs:include schemaLocation="docker.xsd"/>
  <xs:include schemaLocation="singularity.xsd"/>
  <xs:include schemaLocation="cwl/cwltool.xsd"/>
  <xs:include schemaLocation="snakemake.xsd"/>

  <xs:complexType name="opClass">
    <xs:annotation>
      <xs:documentation>
        This type describes the different kinds of operations dataprov supports. Depending on the wrapped command this type consists of an element with a suitable type.
      </xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="commandLine" type="dat:commandLine">
        <xs:annotation>
          <xs:documentation>
            A generic command line command. The user has to specify input/output data objects because dataprov cannot parse any information from the wrapped command.
          </xs:documentation>
        </xs:annotation>      
      </xs:element>
      <xs:element name="docker" type="dat:docker">
        <xs:annotation>
          <xs:documentation>
            The wrapped command begins with 'docker'. The name of the Docker image is parsed from the wrapped command and additional information about the container is tracked if possible. The user has to define input/output data objects because dataprov cannot parse any information from the wrapped command.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="singularity" type="dat:singularity">
        <xs:annotation>
          <xs:documentation>
            The wrapped command begins with 'singularity'. The name of the container is parsed from the wrapped command and additional information about the container is tracked if possible. The user has to define input/output data objects because dataprov cannot parse any information from the wrapped command.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="cwltool" type="dat:cwltool">
        <xs:annotation>
          <xs:documentation>
            The wrapped command begins with 'cwltool'. Information about the .cwl file and the data binding file is tracked. Input and output data objects are handled automatically.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="snakemake" type="dat:snakemake">
        <xs:annotation>
          <xs:documentation>
            The wrapped command begins with 'snakemake'. The input/output and the steps of the workflow are extracted from a dryrun of the workflow and handled automatically.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="operation">
    <xs:annotation>
      <xs:documentation>
        This type represents an operation. A sequence of operations result in a 'history'.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="inputDataObjects"  type="dat:dataObjectList" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            A list of input data objects for the wrapped command. If there are provenance metadata for the input data objects, the history of these files will be incorporated into the histories of the output data objects.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="targetDataObjects" type="dat:dataObjectList">
        <xs:annotation>
          <xs:documentation>
            A list of target (i.e. output) data objects. There will be a provenance metadata file for each single target data object.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="startTime"         type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>
            Starting time of the operation. This is recorded right before dataprov executes the wrapped command.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="endTime"           type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>
            End time of the operation. This is recorded right after the wrapped command finished execution.
          </xs:documentation>
        </xs:annotation>
      </xs:element> 
      <xs:element name="executor"          type="dat:executor">
        <xs:annotation>
          <xs:documentation>
            Information about the executor of this operation. The information about the executor is stored at ~/.dataprov/executor.conf per default.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="host"              type="dat:host">
        <xs:annotation>
          <xs:documentation>
            Information about the host system on which the wrapped command is executed.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="opClass"           type="dat:opClass">
        <xs:annotation>
          <xs:documentation>
            More information about the wrapped command. The provided information depends on the type of operation.
          </xs:documentation>
         </xs:annotation>
      </xs:element>
      <xs:element name="message"           type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            A message that the executor can provide additional information (e.g. the purpose of the operation, some comments, ...)
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>
