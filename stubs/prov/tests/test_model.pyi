# Stubs for prov.tests.test_model (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import unittest
from typing import Any, Optional

from prov.tests.attributes import TestAttributesBase
from prov.tests.qnames import TestQualifiedNamesBase
from prov.tests.statements import TestStatementsBase
from prov.tests.utility import RoundTripTestCase

logger: Any
EX_URI: str
EX2_URI: str

class TestExamplesBase:
    def test_all_examples(self) -> None: ...

class TestLoadingProvToolboxJSON(unittest.TestCase):
    json_path: Any = ...
    fails: Any = ...
    def setUp(self) -> None: ...
    def test_loading_all_json(self) -> None: ...

class TestFlattening(unittest.TestCase):
    def test_flattening(self) -> None: ...

class TestUnification(unittest.TestCase):
    def test_unifying(self) -> None: ...

class TestBundleUpdate(unittest.TestCase):
    def test_bundle_update_simple(self): ...
    def test_document_update_simple(self): ...

class TestAddBundle(unittest.TestCase):
    def document_1(self): ...
    def document_2(self): ...
    def bundle_0(self): ...
    def test_add_bundle_simple(self) -> None: ...
    def test_add_bundle_document(self) -> None: ...

class TestLiteralRepresentation(unittest.TestCase):
    def test_literal_provn_with_single_quotes(self) -> None: ...
    def test_literal_provn_with_triple_quotes(self) -> None: ...

class AllTestsBase(
    TestExamplesBase, TestStatementsBase, TestAttributesBase, TestQualifiedNamesBase
): ...

class RoundTripModelTest(RoundTripTestCase, AllTestsBase):
    def assertRoundTripEquivalence(self, prov_doc: Any, msg: Optional[Any] = ...) -> None: ...
